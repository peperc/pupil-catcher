import pandas as pd


KEYBOARD_MAP = [
    #       '   +   ,   -   .   0   1   2   3   4   5   6   7   8   9   <   `   a   b   c   d   e   f   g   h   i   j   k   l   m   n   o   p   q   r   s   t   u   v   w   x   y   z   ¡   ´   º   ç   ñ
    [0, 1,  2,  1,  5,  3,  4,  3,  12, 11, 10, 9,  8,  7,  6,  5,  4,  13, 2,  12, 8,  10, 10, 10, 9,  8,  7,  5,  6,  5,  4,  6,  7,  4,  3,  12, 9,  11, 10, 8,  9,  11, 11, 9,  12, 1,  2,  13, 2,  3   ], # 1
    [-1, 0, 3,  1,  5,  3,  4,  4,  13, 12, 11, 10, 9,  8,  7,  6,  5,  13, 2,  12, 8,  10, 10, 10, 9,  8,  7,  6,  6,  5,  4,  6,  7,  5,  4,  12, 9,  11, 8,  6,  9,  11, 11, 7,  12, 2,  2,  11, 1,  3   ], # 2
    [-1,-1, 0,  2,  3,  3,  3,  1,  10, 9,  8,  7,  6,  5,  4,  3,  2,  11, 1,  10, 6,  8,  8,  8,  7,  6,  5,  3,  4,  3,  2,  4,  5,  2,  1,  10, 7,  9,  6,  4,  7,  9,  9,  5,  10, 1,  2,  11, 3,  2   ], # 3
    [-1,-1, -1, 0,  4,  2,  3,  3,  12, 11, 10, 9,  8,  7,  6,  5,  4,  12, 1,  11, 9,  9,  9,  9,  8,  7,  6,  4,  5,  4,  3,  5,  6,  3,  2,  11, 8,  10, 7,  5,  8,  10, 10, 6,  11, 1,  1,  13, 1,  2   ], # 4
    [-1,-1, -1, -1, 0,  2,  1,  3,  10, 9,  8,  7,  6,  5,  4,  3,  3,  8,  3,  8,  3,  5,  6,  7,  5,  4,  3,  2,  2,  1,  1,  1,  2,  2,  2,  9,  6,  7,  5,  3,  4,  8,  6,  4,  7,  4,  3,  11, 4,  2  ], # 5
    [-1,-1, -1, -1, -1, 0,  ], # 6
    [-1,-1, -1, -1, -1, -1, 0,  ], # 7
    [-1,-1, -1, -1, -1, -1, -1, 0,  ], # 8
    [-1,-1, -1, -1, -1, -1, -1, -1, 0,  ], # 9
    [-1,-1, -1, -1, -1, -1, -1, -1, -1, 0,  ], # 10
    [-1,-1, -1, -1, -1, -1, -1, -1, -1, -1, 0,  ], # 11
    [-1,-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0,  ], # 12
    [-1,-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0,  ], # 13
    [-1,-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0   ], # 14
    [-1,-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0,  ], # 15
    [-1,-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0,  ], # 16
    [-1,-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0,  ], # 17
    [-1,-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0,  ], # 18
    [-1,-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0,  ], # 19
    [-1,-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0,  ], # 20
    [-1,-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0,  ], # 21
    [-1,-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0,  ], # 22
    [-1,-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0,  ], # 23
    [-1,-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0,  ], # 24
    [-1,-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0,  ], # 25
    [-1,-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0,  ], # 26
    [-1,-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0,  ], # 27
    [-1,-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0,  ], # 30
    [-1,-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0,  ], # 31
    [-1,-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0,  ], # 32
    [-1,-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0,  ], # 33
    [-1,-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0,  ], # 34
    [-1,-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0,  ], # 35
    [-1,-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0,  ], # 36
    [-1,-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0,  ], # 37
    [-1,-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0,  ], # 38
    [-1,-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0,  ], # 39
    [-1,-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0,  ], # 40
    [-1,-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0,  ], # 41
    [-1,-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0,  ], # 42
    [-1,-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0,  ], # 43
    [-1,-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0,  ], # 44
    [-1,-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0,  ], # 45
    [-1,-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0,  ], # 46
    [-1,-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0,  ], # 47
    [-1,-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0,  14, 12  ], # 48
    [-1,-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0,  2   ], # 49
    [-1,-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0   ], # 50
]

EXPERIMENTS = [
    'D:\jrc\uc3m\tfm-repo\datasets\experiments\search-IBK',
    'D:\jrc\uc3m\tfm-repo\datasets\experiments\search-J48',
    'D:\jrc\uc3m\tfm-repo\datasets\experiments\search-LMT',
    'D:\jrc\uc3m\tfm-repo\datasets\experiments\search-logistic',
    'D:\jrc\uc3m\tfm-repo\datasets\experiments\search-SMO',
    'D:\jrc\uc3m\tfm-repo\datasets\experiments\search-SVM'
]


def get_predictions_from_csv(path: str) -> pd.DataFrame:
    return pd.read_csv(path, header=0)


if __name__ == '__main__':
    for experiment in EXPERIMENTS:
        predictions = get_predictions_from_csv(PATH)
        predictions = predictions.apply(lambda x : x['actual'].split(':')[0], axis=1)
        predictions = predictions.apply(lambda x : x['predicted'].split(':')[0], axis=1)